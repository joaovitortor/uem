import io
# Constantes
VALOR_BAIXO = ''
VALOR_ALTO = '~'

def inicialize() -> tuple[str, str, io.TextIOWrapper, io.TextIOWrapper, io.TextIOWrapper, bool]:
    lista1 = open("lista1.txt", 'r')
    lista2 = open("lista2.txt", 'r')
    saida = open("saida.txt", 'w')
    return VALOR_BAIXO, VALOR_BAIXO, lista1, lista2, saida, True

def finalize(lista1: io.TextIOWrapper, lista2: io.TextIOWrapper, saida: io.TextIOWrapper) -> None:
    lista1.close()
    lista2.close()
    saida.close()

def leia_nome(lista: io.TextIOWrapper, nome_ant: str, nome_outra_lista: str, existem_mais_nomes: bool) -> tuple[str, str, bool]:
    nome = lista.readline()
    if not nome:
        if nome_outra_lista == VALOR_ALTO:
            existem_mais_nomes = False
        else:
            nome = VALOR_ALTO
    else:
        if nome <= nome_ant:
            raise ValueError(f'Erro de sequÃªncia na {lista.name} -> {nome}')
    return nome, nome, existem_mais_nomes

def merge() -> None:
    # inicializacao das variaveis
    anterior1, anterior2, lista1, lista2, saida, existem_mais_nomes = inicialize()

    #leia nome1 da lista1
    nome1, anterior1, existem_mais_nomes = leia_nome(lista1, anterior1, anterior2, existem_mais_nomes)

    #leia nome2 da lista2
    nome2, anterior2, existem_mais_nomes = leia_nome(lista2, anterior2, anterior1, existem_mais_nomes)

    while existem_mais_nomes:
        if nome1 < nome2:
            saida.write(nome1)
            #leia nome1 da lista1
            nome1, anterior1, existem_mais_nomes = leia_nome(lista1, anterior1, anterior2, existem_mais_nomes)

        elif nome1 > nome2:
            saida.write(nome2)
            # Leia nome2 da lista2
            nome2, anterior2, existem_mais_nomes = leia_nome(lista2, anterior2, anterior1, existem_mais_nomes)
        else:
            saida.write(nome1)
            #leia nome1 da lista1 e leia nome2 da lista2
            nome1, anterior1, existem_mais_nomes = leia_nome(lista1, anterior1, anterior2, existem_mais_nomes)
            nome2, anterior2, existem_mais_nomes = leia_nome(lista2, anterior2, anterior1, existem_mais_nomes)
    
    #finalizacao
    finalize(lista1, lista2, saida)



if __name__ == '__main__':
    merge()

